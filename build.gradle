plugins {
    id 'java-library'
    id 'com.avast.gradle.docker-compose' version '0.14.0'
}

ext {
    connidVersion = '1.5.0.17'
    polygonVersion = '3.0.1'
    connectorName = 'com.cognitumsoftware.connector.odoo'
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

group 'com.cognitum-software'
version '1.0-SNAPSHOT'

configurations {
    includeInJar
    implementation.extendsFrom includeInJar
}

jar {
    from (configurations.includeInJar) {
        into "lib"
    }
    manifest {
        attributes(
                'ConnectorBundle-Version': "${archiveVersion.get()}",
                'ConnectorBundle-Name': "${connectorName}",
                'ConnectorBundle-FrameworkVersion': "${connidVersion}"
        )
    }
}

repositories {
    mavenCentral()
    maven {
        url "http://nexus.evolveum.com/nexus/content/repositories/releases"
    }
}

dependencies {
    implementation("net.tirasa.connid:connector-framework:${connidVersion}")

    includeInJar("com.evolveum.polygon:connector-common:${polygonVersion}") {
        exclude group: 'net.tirasa.connid', module: 'connector-framework'
    }

    includeInJar("org.apache.commons:commons-lang3:3.11")
    includeInJar("org.apache.xmlrpc:xmlrpc-client:3.1.3") {
        // already included in jdk 11 and is problem when interfaces loaded from this jar bundled with connector
        // and implementation comes from midpoint's jdk 11
        exclude group: 'xml-apis', module: 'xml-apis'
        // of course we don't need junit in production
        exclude group: 'junit', module: 'junit'
    }

    testImplementation("junit:junit:4.12")
    testImplementation("net.tirasa.connid:connector-test-common:${connidVersion}")
    testImplementation("net.tirasa.connid:connector-framework-contract:${connidVersion}")
}

dockerCompose {
    useComposeFiles = ['docker/docker-compose-midpoint.yml']
    //captureContainersOutput = true // uncomment to see container output in std out
    captureContainersOutputToFiles = "${buildDir}/containers-logs/captured"
}

task testInMidpoint {
    group 'verification'
    description 'Builds the connector JAR and uses docker-compose to start midpoint'
    outputs.upToDateWhen { false }

    doLast {
        logger.lifecycle("Waiting indefinitely until key + ENTER is pressed...")
        System.in.read()
        logger.lifecycle("Stopping...")
    }
}

dockerCompose.isRequiredBy(testInMidpoint)
composeUp.dependsOn jar